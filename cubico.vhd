-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\Windows\Documents\Practicas MATLAB\Cubico\cubico\cubico.vhd
-- Created: 2022-05-08 11:31:48
-- 
-- Generated by MATLAB 9.2 and HDL Coder 3.10
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.001
-- Target subsystem base rate: 0.001
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: cubico
-- Source Path: cubico/cubico
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.cubico_pkg.ALL;

ENTITY cubico IS
  PORT( clk                               :   IN    std_logic;
        in1                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
        out_rsvd                          :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En10
        );
END cubico;


ARCHITECTURE rtl OF cubico IS

  -- Component Declarations
  COMPONENT Discrete_FIR_Filter
    PORT( clk                             :   IN    std_logic;
          Discrete_FIR_Filter_in          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En28
          Discrete_FIR_Filter_out         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En10
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Discrete_FIR_Filter
    USE ENTITY work.Discrete_FIR_Filter(rtl);

  -- Signals
  SIGNAL in1_signed                       : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay2_out1                      : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay3_out1                      : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain3_cast                       : signed(16 DOWNTO 0);  -- sfix17_En10
  SIGNAL Gain3_cast_1                     : signed(16 DOWNTO 0);  -- sfix17_En10
  SIGNAL Gain3_out1                       : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Delay1_out1                      : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain2_out1                       : signed(31 DOWNTO 0);  -- sfix32_En22
  SIGNAL Sum3_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum3_add_cast_1                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum3_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay_out1                       : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain1_out1                       : signed(31 DOWNTO 0);  -- sfix32_En22
  SIGNAL Sum2_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum2_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum_out1                         : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain_out1                        : signed(31 DOWNTO 0);  -- sfix32_En22
  SIGNAL Sum1_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum1_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain10_out1                      : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL Gain9_out1                       : signed(31 DOWNTO 0);  -- sfix32_En11
  SIGNAL Gain8_out1                       : signed(31 DOWNTO 0);  -- sfix32_En21
  SIGNAL Gain7_out1                       : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Sum5_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum5_add_cast_1                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum5_add_temp                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum5_add_cast_2                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum5_add_temp_1                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum5_add_cast_3                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum5_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain6_out1                       : signed(31 DOWNTO 0);  -- sfix32_En23
  SIGNAL Gain5_out1                       : signed(31 DOWNTO 0);  -- sfix32_En13
  SIGNAL Gain4_out1                       : signed(31 DOWNTO 0);  -- sfix32_En4
  SIGNAL Sum4_add_cast                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum4_add_temp                    : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum4_add_cast_1                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum4_add_temp_1                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum4_add_cast_2                  : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum4_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Delay4_reg                       : vector_of_signed16(0 TO 34);  -- sfix16 [35]
  SIGNAL Delay4_out1                      : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Sum6_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Gain11_out1                      : signed(31 DOWNTO 0);  -- sfix32_En28
  SIGNAL Discrete_FIR_Filter_out1         : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  u_Discrete_FIR_Filter : Discrete_FIR_Filter
    PORT MAP( clk => clk,
              Discrete_FIR_Filter_in => std_logic_vector(Gain11_out1),  -- sfix32_En28
              Discrete_FIR_Filter_out => Discrete_FIR_Filter_out1  -- sfix16_En10
              );

  in1_signed <= signed(in1);

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      Delay3_out1 <= Delay2_out1;
    END IF;
  END PROCESS Delay3_process;


  Gain3_cast <= resize(Delay3_out1, 17);
  Gain3_cast_1 <=  - (Gain3_cast);
  Gain3_out1 <= Gain3_cast_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      Delay2_out1 <= Delay1_out1;
    END IF;
  END PROCESS Delay2_process;


  Gain2_out1 <= resize(Delay2_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);

  Sum3_add_cast <= Gain2_out1(27 DOWNTO 12);
  Sum3_add_cast_1 <= Gain3_out1(30 DOWNTO 15);
  Sum3_out1 <= Sum3_add_cast + Sum3_add_cast_1;

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      Delay1_out1 <= Delay_out1;
    END IF;
  END PROCESS Delay1_process;


  Gain1_out1 <= to_signed(-16#6000#, 16) * Delay1_out1;

  Sum2_add_cast <= Gain1_out1(27 DOWNTO 12);
  Sum2_out1 <= Sum2_add_cast + Sum3_out1;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      Delay_out1 <= Sum_out1;
    END IF;
  END PROCESS Delay_process;


  Gain_out1 <= resize(Delay_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);

  Sum1_add_cast <= Gain_out1(27 DOWNTO 12);
  Sum1_out1 <= Sum1_add_cast + Sum2_out1;

  Sum_out1 <= in1_signed + Sum1_out1;

  Gain10_out1 <= to_signed(16#4600#, 16) * Sum_out1;

  Gain9_out1 <= to_signed(-16#6F7B#, 16) * Delay_out1;

  Gain8_out1 <= to_signed(16#63E3#, 16) * Delay1_out1;

  -- CSD Encoding (32768) : 1000000000000000; Cost (Adders) = 0
  Gain7_out1 <=  - (resize(Delay2_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32));

  Sum5_add_cast <= Gain10_out1(26 DOWNTO 11);
  Sum5_add_cast_1 <= Gain9_out1(16 DOWNTO 1);
  Sum5_add_temp <= Sum5_add_cast + Sum5_add_cast_1;
  Sum5_add_cast_2 <= Gain8_out1(26 DOWNTO 11);
  Sum5_add_temp_1 <= Sum5_add_temp + Sum5_add_cast_2;
  Sum5_add_cast_3 <= Gain7_out1(28 DOWNTO 13);
  Sum5_out1 <= Sum5_add_temp_1 + Sum5_add_cast_3;

  Gain6_out1 <= to_signed(-16#52AB#, 16) * Delay_out1;

  Gain5_out1 <= to_signed(16#5F95#, 16) * Delay1_out1;

  Gain4_out1 <= to_signed(-16#4E09#, 16) * Delay2_out1;

  Sum4_add_cast <= Gain6_out1(28 DOWNTO 13);
  Sum4_add_temp <= Sum_out1 + Sum4_add_cast;
  Sum4_add_cast_1 <= Gain5_out1(18 DOWNTO 3);
  Sum4_add_temp_1 <= Sum4_add_temp + Sum4_add_cast_1;
  Sum4_add_cast_2 <= Gain4_out1(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0';
  Sum4_out1 <= Sum4_add_temp_1 + Sum4_add_cast_2;

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      Delay4_reg(0) <= Sum4_out1;
      Delay4_reg(1 TO 34) <= Delay4_reg(0 TO 33);
    END IF;
  END PROCESS Delay4_process;

  Delay4_out1 <= Delay4_reg(34);

  Sum6_out1 <= Sum5_out1 + Delay4_out1;

  Gain11_out1 <= to_signed(16#7507#, 16) * Sum6_out1;

  out_rsvd <= Discrete_FIR_Filter_out1;

END rtl;

